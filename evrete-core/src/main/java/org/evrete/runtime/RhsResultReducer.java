package org.evrete.runtime;

import java.util.concurrent.atomic.AtomicLong;

abstract class RhsResultReducer {
    final AtomicLong activationCount = new AtomicLong();
//    private final WorkMemoryActionBuffer actionBuffer = new WorkMemoryActionBuffer();
    // This is where all the actions generated by a rule's RHS will be collected
    //private final RhsActionBuffer buffer = new RhsActionBuffer();

//    protected void bufferNewRhsAction(RhsActionBuffer.Action action) {
//        this.buffer.add(action);
//    }
//
//    public void sinkTo(AbstractRuleSession<?> runtime, WorkMemoryActionBuffer destination) {
//        this.buffer.sink(runtime, destination);
//    }
//
//    public RhsActionBuffer getBuffer() {
//        return buffer;
//    }


//    public WorkMemoryActionBuffer getActionBuffer() {
//        return actionBuffer;
//    }

    public long getActivationCount() {
        return activationCount.get();
    }
}
