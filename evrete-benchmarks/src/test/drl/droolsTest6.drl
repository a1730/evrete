import org.evrete.benchmarks.models.misc.TypeA;
import org.evrete.benchmarks.models.misc.TypeB;
import org.evrete.benchmarks.models.misc.TypeC;
import org.evrete.benchmarks.models.misc.TypeD;
import org.evrete.benchmarks.Drools4Rhs
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;

rule "First"
  when
      $timer : AtomicLong($timer.get() % 2 == 0)
      $number : AtomicInteger($number.get() < $timer.get())
  then
      $number.incrementAndGet();
      update($number);
      Drools4Rhs.out("First" + $number.get());
end

rule "Second"
  when
      $timer : AtomicLong($timer.get() % 3 == 0)
      $number : AtomicInteger($number.get() < $timer.get())
  then
      $number.incrementAndGet();
      update($number);
      Drools4Rhs.out("Second" + $number.get());
end
